input {
  # stdin {
  #   type => 's3'
  # }

  #
  # Import icecast log files
  #
  # file {
  #   type           => 'import_icecast'
  #   start_position => 'beginning'
  #   path           => '/Users/kjw/github.com/kdgm/logstash-plugins/import/icecast/*.log'
  #   sincedb_path   => 'import_icecast.sincedb' # in dir /opt/logstash/server
  # }

  #
  # Import wowza log files
  #
  # file {
  #   type           => 'import_wowza'
  #   start_position => 'beginning'
  #   path           => '/Users/kjw/github.com/kdgm/logstash-plugins/import/wowza/*.log'
  #   sincedb_path   => 'import_wowza.sincedb' # in dir /opt/logstash/server
  # }

  #
  # Import cloudfront session as JSON
  #
  stdin {
    type => 'cloudfront_json'
    codec => 'json'
  }

  # s3 {
  #   type             => 's3'
  #   bucket           => 'logging.kdgm.nl'
  #   backup_to_bucket => 'backup.logging.kdgm.nl'
  #   delete           => true
  #   region           => 'eu-west-1'
  #   prefix           => 'media.staging.kerkdienstgemist.nl/log/'
  #   interval         => 60
  #   credentials      => ['<AMAZON_ACCESS_KEY_ID>', '<AMAZON_SECRET_ACCESS_KEY>']
  #   sincedb_path     => '/dev/null'
  # }

  # s3 {
  #   type             => 'cloudfront_json'
  #   bucket           => 'logging.kdgm.nl'
  #   backup_to_bucket => 'backup.logging.kdgm.nl'
  #   delete           => true
  #   region           => 'eu-west-1'
  #   prefix           => 'sessions/vodcdn/' # or 'sessions/livecdn/'
  #   interval         => 60
  #   credentials      => ['<AMAZON_ACCESS_KEY_ID>', '<AMAZON_SECRET_ACCESS_KEY>']
  #   sincedb_path     => '/dev/null'
  # }

  # #
  # # Events from the David decoder are received through Redis
  # #
  # redis {
  #   'codec'     => 'json'
  #   'data_type' => 'list'
  #   'key'       => 'smcp'
  #   'type'      => 'smcp'
  # }

  # #
  # # Events from the Maven encoder are received through Redis
  # #
  # redis {
  #   'codec'     => 'json'
  #   'data_type' => 'list'
  #   'key'       => 'smcp'
  #   'type'      => 'maven'
  # }

}

filter {

  # start of filter section
  # matches with closing '}' in 99_output.conf
